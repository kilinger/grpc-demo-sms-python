# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sms.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='sms.proto',
  package='sms',
  syntax='proto3',
  serialized_pb=_b('\n\tsms.proto\x12\x03sms\"`\n\x12VerifyPhoneRequest\x12\x0b\n\x03tel\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x0e\n\x06minute\x18\x03 \x01(\t\x12\x0f\n\x07\x63ompany\x18\x04 \x01(\t\x12\x0e\n\x06sender\x18\x05 \x01(\t\"T\n\x17RetrievePasswordRequest\x12\x0b\n\x03tel\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x0e\n\x06minute\x18\x03 \x01(\t\x12\x0e\n\x06sender\x18\x04 \x01(\t\"K\n\x0e\x43\x61ptchaRequest\x12\x0b\n\x03tel\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x0e\n\x06minute\x18\x03 \x01(\t\x12\x0e\n\x06sender\x18\x04 \x01(\t\"6\n\nSmsRequest\x12\x0b\n\x03tel\x18\x01 \x01(\t\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12\x0e\n\x06sender\x18\x03 \x01(\t\"\x07\n\x05\x45mpty\"\x88\x01\n\x05\x45rror\x12\r\n\x03tel\x18\x01 \x01(\tH\x00\x12\r\n\x03msg\x18\x02 \x01(\tH\x00\x12\x10\n\x06sender\x18\x03 \x01(\tH\x00\x12\x10\n\x06minute\x18\x04 \x01(\tH\x00\x12\x0e\n\x04\x63ode\x18\x05 \x01(\tH\x00\x12\x11\n\x07\x63ompany\x18\x06 \x01(\tH\x00\x12\x11\n\x07\x64\x65\x66\x61ult\x18\x07 \x01(\tH\x00\x42\x07\n\x05\x65rror\">\n\x08SmsReply\x12\x0e\n\x04uuid\x18\x01 \x01(\tH\x00\x12\x1b\n\x05\x65rror\x18\x02 \x01(\x0b\x32\n.sms.ErrorH\x00\x42\x05\n\x03msg\"\x1e\n\x0eInquireRequest\x12\x0c\n\x04uuid\x18\x01 \x01(\t\"\x1e\n\x0cInquireReply\x12\x0e\n\x06status\x18\x01 \x01(\x03\x32\x97\x02\n\tSmsServer\x12(\n\x04Send\x12\x0f.sms.SmsRequest\x1a\r.sms.SmsReply\"\x00\x12/\n\x07\x43\x61ptcha\x12\x13.sms.CaptchaRequest\x1a\r.sms.SmsReply\"\x00\x12\x41\n\x10RetrievePassword\x12\x1c.sms.RetrievePasswordRequest\x1a\r.sms.SmsReply\"\x00\x12\x37\n\x0bVerifyPhone\x12\x17.sms.VerifyPhoneRequest\x1a\r.sms.SmsReply\"\x00\x12\x33\n\x07Inquire\x12\x13.sms.InquireRequest\x1a\x11.sms.InquireReply\"\x00\x42(\n\x14io.grpc.examples.smsB\x08SMSProtoP\x01\xa2\x02\x03HLWb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_VERIFYPHONEREQUEST = _descriptor.Descriptor(
  name='VerifyPhoneRequest',
  full_name='sms.VerifyPhoneRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tel', full_name='sms.VerifyPhoneRequest.tel', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='code', full_name='sms.VerifyPhoneRequest.code', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='minute', full_name='sms.VerifyPhoneRequest.minute', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='company', full_name='sms.VerifyPhoneRequest.company', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sender', full_name='sms.VerifyPhoneRequest.sender', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18,
  serialized_end=114,
)


_RETRIEVEPASSWORDREQUEST = _descriptor.Descriptor(
  name='RetrievePasswordRequest',
  full_name='sms.RetrievePasswordRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tel', full_name='sms.RetrievePasswordRequest.tel', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='code', full_name='sms.RetrievePasswordRequest.code', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='minute', full_name='sms.RetrievePasswordRequest.minute', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sender', full_name='sms.RetrievePasswordRequest.sender', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=116,
  serialized_end=200,
)


_CAPTCHAREQUEST = _descriptor.Descriptor(
  name='CaptchaRequest',
  full_name='sms.CaptchaRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tel', full_name='sms.CaptchaRequest.tel', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='code', full_name='sms.CaptchaRequest.code', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='minute', full_name='sms.CaptchaRequest.minute', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sender', full_name='sms.CaptchaRequest.sender', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=202,
  serialized_end=277,
)


_SMSREQUEST = _descriptor.Descriptor(
  name='SmsRequest',
  full_name='sms.SmsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tel', full_name='sms.SmsRequest.tel', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='msg', full_name='sms.SmsRequest.msg', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sender', full_name='sms.SmsRequest.sender', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=279,
  serialized_end=333,
)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='sms.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=335,
  serialized_end=342,
)


_ERROR = _descriptor.Descriptor(
  name='Error',
  full_name='sms.Error',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tel', full_name='sms.Error.tel', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='msg', full_name='sms.Error.msg', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sender', full_name='sms.Error.sender', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='minute', full_name='sms.Error.minute', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='code', full_name='sms.Error.code', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='company', full_name='sms.Error.company', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='default', full_name='sms.Error.default', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='error', full_name='sms.Error.error',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=345,
  serialized_end=481,
)


_SMSREPLY = _descriptor.Descriptor(
  name='SmsReply',
  full_name='sms.SmsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='uuid', full_name='sms.SmsReply.uuid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='sms.SmsReply.error', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='msg', full_name='sms.SmsReply.msg',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=483,
  serialized_end=545,
)


_INQUIREREQUEST = _descriptor.Descriptor(
  name='InquireRequest',
  full_name='sms.InquireRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='uuid', full_name='sms.InquireRequest.uuid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=547,
  serialized_end=577,
)


_INQUIREREPLY = _descriptor.Descriptor(
  name='InquireReply',
  full_name='sms.InquireReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='sms.InquireReply.status', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=579,
  serialized_end=609,
)

_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['tel'])
_ERROR.fields_by_name['tel'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['msg'])
_ERROR.fields_by_name['msg'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['sender'])
_ERROR.fields_by_name['sender'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['minute'])
_ERROR.fields_by_name['minute'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['code'])
_ERROR.fields_by_name['code'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['company'])
_ERROR.fields_by_name['company'].containing_oneof = _ERROR.oneofs_by_name['error']
_ERROR.oneofs_by_name['error'].fields.append(
  _ERROR.fields_by_name['default'])
_ERROR.fields_by_name['default'].containing_oneof = _ERROR.oneofs_by_name['error']
_SMSREPLY.fields_by_name['error'].message_type = _ERROR
_SMSREPLY.oneofs_by_name['msg'].fields.append(
  _SMSREPLY.fields_by_name['uuid'])
_SMSREPLY.fields_by_name['uuid'].containing_oneof = _SMSREPLY.oneofs_by_name['msg']
_SMSREPLY.oneofs_by_name['msg'].fields.append(
  _SMSREPLY.fields_by_name['error'])
_SMSREPLY.fields_by_name['error'].containing_oneof = _SMSREPLY.oneofs_by_name['msg']
DESCRIPTOR.message_types_by_name['VerifyPhoneRequest'] = _VERIFYPHONEREQUEST
DESCRIPTOR.message_types_by_name['RetrievePasswordRequest'] = _RETRIEVEPASSWORDREQUEST
DESCRIPTOR.message_types_by_name['CaptchaRequest'] = _CAPTCHAREQUEST
DESCRIPTOR.message_types_by_name['SmsRequest'] = _SMSREQUEST
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['Error'] = _ERROR
DESCRIPTOR.message_types_by_name['SmsReply'] = _SMSREPLY
DESCRIPTOR.message_types_by_name['InquireRequest'] = _INQUIREREQUEST
DESCRIPTOR.message_types_by_name['InquireReply'] = _INQUIREREPLY

VerifyPhoneRequest = _reflection.GeneratedProtocolMessageType('VerifyPhoneRequest', (_message.Message,), dict(
  DESCRIPTOR = _VERIFYPHONEREQUEST,
  __module__ = 'sms_pb2'
  # @@protoc_insertion_point(class_scope:sms.VerifyPhoneRequest)
  ))
_sym_db.RegisterMessage(VerifyPhoneRequest)

RetrievePasswordRequest = _reflection.GeneratedProtocolMessageType('RetrievePasswordRequest', (_message.Message,), dict(
  DESCRIPTOR = _RETRIEVEPASSWORDREQUEST,
  __module__ = 'sms_pb2'
  # @@protoc_insertion_point(class_scope:sms.RetrievePasswordRequest)
  ))
_sym_db.RegisterMessage(RetrievePasswordRequest)

CaptchaRequest = _reflection.GeneratedProtocolMessageType('CaptchaRequest', (_message.Message,), dict(
  DESCRIPTOR = _CAPTCHAREQUEST,
  __module__ = 'sms_pb2'
  # @@protoc_insertion_point(class_scope:sms.CaptchaRequest)
  ))
_sym_db.RegisterMessage(CaptchaRequest)

SmsRequest = _reflection.GeneratedProtocolMessageType('SmsRequest', (_message.Message,), dict(
  DESCRIPTOR = _SMSREQUEST,
  __module__ = 'sms_pb2'
  # @@protoc_insertion_point(class_scope:sms.SmsRequest)
  ))
_sym_db.RegisterMessage(SmsRequest)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'sms_pb2'
  # @@protoc_insertion_point(class_scope:sms.Empty)
  ))
_sym_db.RegisterMessage(Empty)

Error = _reflection.GeneratedProtocolMessageType('Error', (_message.Message,), dict(
  DESCRIPTOR = _ERROR,
  __module__ = 'sms_pb2'
  # @@protoc_insertion_point(class_scope:sms.Error)
  ))
_sym_db.RegisterMessage(Error)

SmsReply = _reflection.GeneratedProtocolMessageType('SmsReply', (_message.Message,), dict(
  DESCRIPTOR = _SMSREPLY,
  __module__ = 'sms_pb2'
  # @@protoc_insertion_point(class_scope:sms.SmsReply)
  ))
_sym_db.RegisterMessage(SmsReply)

InquireRequest = _reflection.GeneratedProtocolMessageType('InquireRequest', (_message.Message,), dict(
  DESCRIPTOR = _INQUIREREQUEST,
  __module__ = 'sms_pb2'
  # @@protoc_insertion_point(class_scope:sms.InquireRequest)
  ))
_sym_db.RegisterMessage(InquireRequest)

InquireReply = _reflection.GeneratedProtocolMessageType('InquireReply', (_message.Message,), dict(
  DESCRIPTOR = _INQUIREREPLY,
  __module__ = 'sms_pb2'
  # @@protoc_insertion_point(class_scope:sms.InquireReply)
  ))
_sym_db.RegisterMessage(InquireReply)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\024io.grpc.examples.smsB\010SMSProtoP\001\242\002\003HLW'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class SmsServerStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Send = channel.unary_unary(
        '/sms.SmsServer/Send',
        request_serializer=SmsRequest.SerializeToString,
        response_deserializer=SmsReply.FromString,
        )
    self.Captcha = channel.unary_unary(
        '/sms.SmsServer/Captcha',
        request_serializer=CaptchaRequest.SerializeToString,
        response_deserializer=SmsReply.FromString,
        )
    self.RetrievePassword = channel.unary_unary(
        '/sms.SmsServer/RetrievePassword',
        request_serializer=RetrievePasswordRequest.SerializeToString,
        response_deserializer=SmsReply.FromString,
        )
    self.VerifyPhone = channel.unary_unary(
        '/sms.SmsServer/VerifyPhone',
        request_serializer=VerifyPhoneRequest.SerializeToString,
        response_deserializer=SmsReply.FromString,
        )
    self.Inquire = channel.unary_unary(
        '/sms.SmsServer/Inquire',
        request_serializer=InquireRequest.SerializeToString,
        response_deserializer=InquireReply.FromString,
        )


class SmsServerServicer(object):

  def Send(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Captcha(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RetrievePassword(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def VerifyPhone(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Inquire(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SmsServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Send': grpc.unary_unary_rpc_method_handler(
          servicer.Send,
          request_deserializer=SmsRequest.FromString,
          response_serializer=SmsReply.SerializeToString,
      ),
      'Captcha': grpc.unary_unary_rpc_method_handler(
          servicer.Captcha,
          request_deserializer=CaptchaRequest.FromString,
          response_serializer=SmsReply.SerializeToString,
      ),
      'RetrievePassword': grpc.unary_unary_rpc_method_handler(
          servicer.RetrievePassword,
          request_deserializer=RetrievePasswordRequest.FromString,
          response_serializer=SmsReply.SerializeToString,
      ),
      'VerifyPhone': grpc.unary_unary_rpc_method_handler(
          servicer.VerifyPhone,
          request_deserializer=VerifyPhoneRequest.FromString,
          response_serializer=SmsReply.SerializeToString,
      ),
      'Inquire': grpc.unary_unary_rpc_method_handler(
          servicer.Inquire,
          request_deserializer=InquireRequest.FromString,
          response_serializer=InquireReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'sms.SmsServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaSmsServerServicer(object):
  def Send(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Captcha(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def RetrievePassword(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def VerifyPhone(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Inquire(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaSmsServerStub(object):
  def Send(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Send.future = None
  def Captcha(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Captcha.future = None
  def RetrievePassword(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  RetrievePassword.future = None
  def VerifyPhone(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  VerifyPhone.future = None
  def Inquire(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Inquire.future = None


def beta_create_SmsServer_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('sms.SmsServer', 'Captcha'): CaptchaRequest.FromString,
    ('sms.SmsServer', 'Inquire'): InquireRequest.FromString,
    ('sms.SmsServer', 'RetrievePassword'): RetrievePasswordRequest.FromString,
    ('sms.SmsServer', 'Send'): SmsRequest.FromString,
    ('sms.SmsServer', 'VerifyPhone'): VerifyPhoneRequest.FromString,
  }
  response_serializers = {
    ('sms.SmsServer', 'Captcha'): SmsReply.SerializeToString,
    ('sms.SmsServer', 'Inquire'): InquireReply.SerializeToString,
    ('sms.SmsServer', 'RetrievePassword'): SmsReply.SerializeToString,
    ('sms.SmsServer', 'Send'): SmsReply.SerializeToString,
    ('sms.SmsServer', 'VerifyPhone'): SmsReply.SerializeToString,
  }
  method_implementations = {
    ('sms.SmsServer', 'Captcha'): face_utilities.unary_unary_inline(servicer.Captcha),
    ('sms.SmsServer', 'Inquire'): face_utilities.unary_unary_inline(servicer.Inquire),
    ('sms.SmsServer', 'RetrievePassword'): face_utilities.unary_unary_inline(servicer.RetrievePassword),
    ('sms.SmsServer', 'Send'): face_utilities.unary_unary_inline(servicer.Send),
    ('sms.SmsServer', 'VerifyPhone'): face_utilities.unary_unary_inline(servicer.VerifyPhone),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_SmsServer_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('sms.SmsServer', 'Captcha'): CaptchaRequest.SerializeToString,
    ('sms.SmsServer', 'Inquire'): InquireRequest.SerializeToString,
    ('sms.SmsServer', 'RetrievePassword'): RetrievePasswordRequest.SerializeToString,
    ('sms.SmsServer', 'Send'): SmsRequest.SerializeToString,
    ('sms.SmsServer', 'VerifyPhone'): VerifyPhoneRequest.SerializeToString,
  }
  response_deserializers = {
    ('sms.SmsServer', 'Captcha'): SmsReply.FromString,
    ('sms.SmsServer', 'Inquire'): InquireReply.FromString,
    ('sms.SmsServer', 'RetrievePassword'): SmsReply.FromString,
    ('sms.SmsServer', 'Send'): SmsReply.FromString,
    ('sms.SmsServer', 'VerifyPhone'): SmsReply.FromString,
  }
  cardinalities = {
    'Captcha': cardinality.Cardinality.UNARY_UNARY,
    'Inquire': cardinality.Cardinality.UNARY_UNARY,
    'RetrievePassword': cardinality.Cardinality.UNARY_UNARY,
    'Send': cardinality.Cardinality.UNARY_UNARY,
    'VerifyPhone': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'sms.SmsServer', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
